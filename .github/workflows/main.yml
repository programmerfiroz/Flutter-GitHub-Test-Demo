on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
      - develop

name: "Build & Release"

jobs:
  build:
    name: Build & Release for Android and iOS
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]  # Define the operating systems for builds
    steps:
      - uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - name: Build Android APK
        if: matrix.os == 'windows-latest'
        run: |
          flutter build apk --release --split-per-abi
          echo "Contents of build/app/outputs/apk/release:"
          ls -R build/app/outputs/apk/release/

      - name: Build iOS IPA
        if: matrix.os == 'macos-latest'
        run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload
          echo "Contents of build/ios/iphoneos:"
          ls -R build/ios/iphoneos/

      - name: Upload Android APK to Releases
        if: matrix.os == 'windows-latest'
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            build/app/outputs/apk/release/*.apk  # Match any APK
          tag: v1.0.${{ github.run_number }}  # Use run number for uniqueness
          token: ${{ secrets.TOKEN }}
          skipIfReleaseExists: true  # Skip if the release already exists

      - name: Upload iOS IPA to Releases
        if: matrix.os == 'macos-latest'
        uses: ncipollo/release-action@v1
        with:
          artifacts: build/ios/iphoneos/app.ipa  # Match the IPA
          tag: v1.0.${{ github.run_number }}  # Use run number for uniqueness
          token: ${{ secrets.TOKEN }}
          skipIfReleaseExists: true  # Skip if the release already exists

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build  # Ensure this job runs after the build job
    steps:
      - uses: actions/checkout@v3

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.${{ github.run_number }}  # Corrected to tag_name
          files: |
            build/app/outputs/apk/release/*.apk  # Match any APK
            build/ios/iphoneos/app.ipa  # Match IPA
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Token to authenticate with GitHub
